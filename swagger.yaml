openapi: 3.0.1
info:
  title: Electric Bike Projects API
  description: API documentation for the electric bike backend services.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local development server (matches default .env)
  - url: http://localhost:5000
    description: Alternate port

tags:
  - name: Auth
    description: Authentication endpoints for customers
  - name: Users Management
    description: Admin and EVM Staff endpoints to manage internal users
  - name: Vehicle Catalog
    description: Manage vehicle models, variants and specs

paths:
  ##########################################################
  #                   AUTH (CUSTOMER)
  ##########################################################
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new customer account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Customer registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/login:
    post:
      tags:
        - Auth
      summary: Authenticate a customer with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid credentials
        "404":
          description: Email not found
        "500":
          description: Server error

  /auth/google:
    post:
      tags:
        - Auth
      summary: Authenticate a customer using a Google ID token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleLoginRequest"
      responses:
        "200":
          description: Google login successful
        "500":
          description: Google authentication failed

  /auth/logout:
    post:
      tags:
        - Auth
      summary: Logout the current customer session
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"

  ##########################################################
  #                 USERS MANAGEMENT (LOGIN)
  ##########################################################
  /users/login:
    post:
      tags:
        - Users Management
      summary: Login for internal users (Admin, EVM Staff, Dealer Staff)
      description: |
        Authenticate internal system users (Admin, EVM Staff, Dealer Staff).  
        Returns a JWT token for authorized access to user management endpoints.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"
        "400":
          description: Missing credentials
        "401":
          description: Invalid credentials
        "404":
          description: User not found

  ##########################################################
  #                 USERS MANAGEMENT (CRUD)
  ##########################################################
  /users:
    get:
      tags:
        - Users Management
      summary: Get all internal users (Admin, EVM Staff)
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden

    post:
      tags:
        - Users Management
      summary: Create a new internal user (Admin only)
      description: Requires Admin role
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid request body
        "401":
          description: Unauthorized
        "403":
          description: Forbidden

  /users/{id}:
    put:
      tags:
        - Users Management
      summary: Update an existing internal user (Admin, EVM Staff)
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: User updated successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found

    delete:
      tags:
        - Users Management
      summary: Delete an internal user (Admin only)
      description: Requires Admin role
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found

  ##########################################################
  #             VEHICLE MODELS & VARIANTS
  ##########################################################
  /vehicles/models:
    get:
      tags:
        - Vehicle Catalog
      summary: List all vehicle models with variants and specs
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://localhost:3000/vehicles/models" \
              -H "Authorization: Bearer <token>"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VehicleModelDetail"
              example:
                - id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                  name: "E-Bike S1"
                  description: "Entry level city e-bike for daily commute"
                  createdAt: "2024-09-10T08:30:15.000Z"
                  variants:
                    - id: "e2b3c4d5-e6f7-8901-bc23-d4e5f6a78901"
                      model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                      version: "Standard"
                      color: "Matte Black"
                      base_price: 1990.0
                      createdAt: "2024-09-11T03:45:00.000Z"
                    - id: "a7b8c9d0-e1f2-3456-7890-ab12c3d4e5f6"
                      model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                      version: "Premium"
                      color: "Moonlight Silver"
                      base_price: 2599.99
                      createdAt: "2024-09-12T09:10:00.000Z"
                  specs:
                    - id: "0f1e2d3c-4b5a-6978-9012-abcd3456ef78"
                      model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                      spec_id: "12345678-90ab-cdef-1234-567890abcdef"
                      value: "120 km"
                      spec:
                        id: "12345678-90ab-cdef-1234-567890abcdef"
                        category: "Performance"
                        name: "Range"
                        unit: "km"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server error

    post:
      tags:
        - Vehicle Catalog
      summary: Create a new vehicle model
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X POST "http://localhost:3000/vehicles/models" \
              -H "Authorization: Bearer <token>" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "E-Bike S1",
                "description": "Entry level city e-bike for daily commute"
              }'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleModelCreateRequest"
            example:
              name: "E-Bike S1"
              description: "Entry level city e-bike for daily commute"
      responses:
        "201":
          description: Vehicle model created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleModelResponse"
              example:
                message: "Tạo vehicle model thành công"
                model:
                  id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                  name: "E-Bike S1"
                  description: "Entry level city e-bike for daily commute"
                  createdAt: "2024-09-10T08:30:15.000Z"
        "400":
          description: Invalid input or duplicate model name
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server error

  /vehicles/variants:
    get:
      tags:
        - Vehicle Catalog
      summary: List all vehicle variants
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://localhost:3000/vehicles/variants" \
              -H "Authorization: Bearer <token>"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VehicleVariantDetail"
              example:
                - id: "e2b3c4d5-e6f7-8901-bc23-d4e5f6a78901"
                  model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                  version: "Standard"
                  color: "Matte Black"
                  base_price: 1990.0
                  createdAt: "2024-09-11T03:45:00.000Z"
                  model:
                    id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                    name: "E-Bike S1"
                    description: "Entry level city e-bike for daily commute"
                    createdAt: "2024-09-10T08:30:15.000Z"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Server error

    post:
      tags:
        - Vehicle Catalog
      summary: Create a new vehicle variant
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X POST "http://localhost:3000/vehicles/variants" \
              -H "Authorization: Bearer <token>" \
              -H "Content-Type: application/json" \
              -d '{
                "model_id": "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890",
                "version": "Premium",
                "color": "Moonlight Silver",
                "base_price": 2599.99
              }'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleVariantCreateRequest"
            example:
              model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
              version: "Premium"
              color: "Moonlight Silver"
              base_price: 2599.99
      responses:
        "201":
          description: Vehicle variant created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleVariantResponse"
              example:
                message: "Tạo variant thành công"
                variant:
                  id: "a7b8c9d0-e1f2-3456-7890-ab12c3d4e5f6"
                  model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                  version: "Premium"
                  color: "Moonlight Silver"
                  base_price: 2599.99
                  createdAt: "2024-09-12T09:10:00.000Z"
        "400":
          description: Invalid input or variant already exists
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Vehicle model not found
        "500":
          description: Server error

  /vehicles/model-specs:
    post:
      tags:
        - Vehicle Catalog
      summary: Attach or update a specification value for a model
      description: Requires Admin or EVM Staff role
      security:
        - bearerAuth: []
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X POST "http://localhost:3000/vehicles/model-specs" \
              -H "Authorization: Bearer <token>" \
              -H "Content-Type: application/json" \
              -d '{
                "model_id": "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890",
                "spec_id": "12345678-90ab-cdef-1234-567890abcdef",
                "value": "120 km"
              }'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleModelSpecAttachRequest"
            example:
              model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
              spec_id: "12345678-90ab-cdef-1234-567890abcdef"
              value: "120 km"
      responses:
        "201":
          description: Spec attached successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleModelSpecResponse"
              example:
                message: "Gắn spec cho model thành công"
                vehicleModelSpec:
                  id: "0f1e2d3c-4b5a-6978-9012-abcd3456ef78"
                  model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                  spec_id: "12345678-90ab-cdef-1234-567890abcdef"
                  value: "120 km"
                  spec:
                    id: "12345678-90ab-cdef-1234-567890abcdef"
                    category: "Performance"
                    name: "Range"
                    unit: "km"
        "200":
          description: Spec value updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleModelSpecResponse"
              example:
                message: "Cập nhật giá trị spec thành công"
                vehicleModelSpec:
                  id: "0f1e2d3c-4b5a-6978-9012-abcd3456ef78"
                  model_id: "f1a2b3c4-d5e6-7890-ab12-c3d4e5f67890"
                  spec_id: "12345678-90ab-cdef-1234-567890abcdef"
                  value: "150 km"
                  spec:
                    id: "12345678-90ab-cdef-1234-567890abcdef"
                    category: "Performance"
                    name: "Range"
                    unit: "km"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Model or spec not found
        "500":
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ##########################################################
    #                   AUTH (CUSTOMER)
    ##########################################################
    RegisterRequest:
      type: object
      required:
        - full_name
        - email
        - phone
        - password
      properties:
        full_name:
          type: string
          example: Nguyen Van A
        email:
          type: string
          format: email
          example: customer@example.com
        phone:
          type: string
          example: "0987654321"
        password:
          type: string
          format: password
          example: P@ssw0rd!
        address:
          type: string
          example: 123 Nguyen Trai, District 1, Ho Chi Minh City
        dob:
          type: string
          format: date
          example: 1995-05-20

    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: Đăng ký thành công
        customer:
          $ref: "#/components/schemas/CustomerSummary"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: customer@example.com
        password:
          type: string
          format: password
          example: P@ssw0rd!

    GoogleLoginRequest:
      type: object
      required:
        - idToken
      properties:
        idToken:
          type: string
          description: Firebase ID token obtained from the Google OAuth flow
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc0Nz...

    AuthResponse:
      type: object
      properties:
        message:
          type: string
          example: Đăng nhập thành công
        token:
          type: string
          description: JWT token for authenticated requests
        customer:
          $ref: "#/components/schemas/CustomerSummary"

    CustomerSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 11111111-1111-1111-1111-111111111111
        full_name:
          type: string
          example: Nguyen Van A
        email:
          type: string
          format: email
          example: customer@example.com
        phone:
          type: string
          example: "0987654321"

    MessageResponse:
      type: object
      properties:
        message:
          type: string
          example: Đăng xuất thành công

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Sai mật khẩu

    ##########################################################
    #                   USERS MANAGEMENT
    ##########################################################
    UserLoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: admin@evdealer.vn
        password:
          type: string
          format: password
          example: admin123

    UserLoginResponse:
      type: object
      properties:
        message:
          type: string
          example: Đăng nhập thành công
        token:
          type: string
          description: JWT token for authenticated requests
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            id:
              type: string
              example: "11111111-1111-1111-1111-111111111111"
            username:
              type: string
              example: admin
            email:
              type: string
              example: admin@evdealer.vn
            role_name:
              type: string
              example: Admin

    User:
      type: object
      properties:
        id:
          type: string
          example: "8b7f3a67-9e7b-4d99-8265-59e5a24e0d3a"
        username:
          type: string
          example: "dealer_admin"
        email:
          type: string
          example: "dealer_admin@evdealer.vn"
        phone:
          type: string
          example: "0901234567"
        role_name:
          type: string
          example: "EVM Staff"
        created_at:
          type: string
          example: "2025-10-10T10:00:00Z"

    UserCreate:
      type: object
      required:
        - username
        - email
        - password
        - role_name
      properties:
        username:
          type: string
          example: "staff_001"
        email:
          type: string
          example: "staff001@evdealer.vn"
        password:
          type: string
          example: "123456"
        phone:
          type: string
          example: "0987654321"
        role_name:
          type: string
          example: "EVM Staff"

    UserUpdate:
      type: object
      properties:
        username:
          type: string
          example: "staff_001_updated"
        phone:
          type: string
          example: "0981234567"
        role_name:
          type: string
          example: "Admin"
